name: build-push-docker
on:
  workflow_dispatch:
    inputs:
      sha_short:
        description: 'sha_short'
        required: true
      new_tag:
        description: 'new_tag'
        required: true
      new_tag_short:
        description: 'new_tag_short'
        required: true
      name:
        description: 'name'
        required: true
      sha:
        description: "sha"
        required: true
jobs:
  server:
    name: Build and push server Docker image
    runs-on: ubuntu-latest
    if: github.event.inputs.name || github.event.inputs.new_tag
    env:
      IMAGE_NAME: reearth/reearth
    defaults:
      run:
        working-directory: server
    steps:
      - name: Checkout
        uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2.7.0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55 # v2.10.0
      - name: Login to DockerHub
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get options
        id: options
        env:
          TAG: ${{ github.event.inputs.new_tag_short }}
          NAME: ${{ github.event.inputs.name }}
          SHA: ${{ github.event.inputs.sha_short }}
        run: |
          if [[ -n $TAG ]]; then
            PLATFORMS=linux/amd64,linux/arm64
            VERSION=$TAG
            TAGS=$IMAGE_NAME:$TAG
            if [[ ! $TAG =~ '-' ]]; then
              TAGS+=,${IMAGE_NAME}:${TAG%.*}
              TAGS+=,${IMAGE_NAME}:${TAG%%.*}
              TAGS+=,${IMAGE_NAME}:latest
            fi
          else
            PLATFORMS=linux/amd64
            VERSION=$SHA
            TAGS=$IMAGE_NAME:$NAME
          fi
          echo "::set-output name=platforms::$PLATFORMS"
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=tags::$TAGS"
      
      # TODO: Remove later after migrating to Cloud Run
      - name: Fetch reearth-web release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: reearth/reearth-classic
          version: tags/${{ github.event.inputs.name || needs.info.outputs.tag }}
          file: reearth-web_${{ github.event.inputs.name || needs.info.outputs.tag }}.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
          target: server/reearth-web.tar.gz
      - name: Extract reearth/web
        run: tar -xvf reearth-web.tar.gz; mv reearth-web web; ls

      - name: Build and push docker image
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a # v2.10.0
        with:
          context: server
          platforms: ${{ steps.options.outputs.platforms }}
          push: true
          build-args: VERSION=${{ steps.options.outputs.version }}
          tags: ${{ steps.options.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  web:
    name: Build and push web Docker image
    runs-on: ubuntu-latest
    if: github.event.inputs.name || github.event.inputs.new_tag
    env:
      IMAGE_NAME: reearth/reearth-classic-web
    defaults:
      run:
        working-directory: web
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      - name: Login to DockerHub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get options
        id: options
        env:
          TAG: ${{ github.event.inputs.new_tag_short }}
          NAME: ${{ github.event.inputs.name }}
          SHA: ${{ github.event.inputs.sha_short }}
        run: |
          if [[ -n $TAG ]]; then
            PLATFORMS=linux/amd64,linux/arm64
            VERSION=$TAG
            TAGS=$IMAGE_NAME:$TAG
            if [[ ! $TAG =~ '-' ]]; then
              TAGS+=,${IMAGE_NAME}:${TAG%.*}
              TAGS+=,${IMAGE_NAME}:${TAG%%.*}
              TAGS+=,${IMAGE_NAME}:latest
            fi
          else
            PLATFORMS=linux/amd64
            VERSION=$SHA
            TAGS=$IMAGE_NAME:$NAME
          fi
          echo "::set-output name=platforms::$PLATFORMS"
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=tags::$TAGS"
      - name: Build and push docker image
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # v5.4.0
        with:
          context: web
          platforms: ${{ steps.options.outputs.platforms }}
          push: true
          build-args: VERSION=${{ steps.options.outputs.version }}
          tags: ${{ steps.options.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
